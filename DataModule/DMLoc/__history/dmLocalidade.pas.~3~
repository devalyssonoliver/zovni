unit dmLocalidade;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Comp.Client, FireDAC.Stan.Param, Data.DB, Vcl.StdCtrls,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  FireDAC.Comp.DataSet;

type
  TDM_Localidade = class(TDataModule)
    fdqryEstados: TFDQuery;
    fdqryCidades: TFDQuery;
  public
    procedure CarregarEstados(Combo: TComboBox);
    procedure CarregarCidades(Combo: TComboBox; EstadoID: Integer);
  end;

var
  DM_Localidade: TDM_Localidade;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TDM_Localidade.CarregarEstados(Combo: TComboBox);
begin
  fdqryEstados.Close;
  fdqryEstados.SQL.Text := 'SELECT id, nome FROM estados ORDER BY nome';
  fdqryEstados.Open;

  Combo.Items.Clear;
  fdqryEstados.First;
  while not fdqryEstados.Eof do
  begin
    Combo.Items.AddObject(
      fdqryEstados.FieldByName('nome').AsString,
      TObject(fdqryEstados.FieldByName('id').AsInteger)
    );
    fdqryEstados.Next;
  end;
end;

procedure TDM_Localidade.CarregarCidades(Combo: TComboBox; EstadoID: Integer);
begin
  fdqryCidades.Close;
  fdqryCidades.SQL.Text := 'SELECT id, nome FROM municipios WHERE estado_id = :estado_id ORDER BY nome';
  fdqryCidades.ParamByName('estado_id').AsInteger := EstadoID;
  fdqryCidades.Open;

  Combo.Items.Clear;
  fdqryCidades.First;
  while not fdqryCidades.Eof do
  begin
    Combo.Items.AddObject(
      fdqryCidades.FieldByName('nome').AsString,
      TObject(fdqryCidades.FieldByName('id').AsInteger)
    );
    fdqryCidades.Next;
  end;
end;

end.

