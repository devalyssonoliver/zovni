unit dmProdutoCad;

interface

uses
  System.SysUtils, System.Classes, Gerenciador, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TDM_ProdutoCad = class(TDataModule)
    fdqryProdutoCad: TFDQuery;
    fldProdutoCadid: TIntegerField;
    wdstrngfldProdutoCadnome: TWideStringField;
    wdmfldProdutoCaddescricao: TWideMemoField;
    wdstrngfldProdutoCadmarca: TWideStringField;
    wdstrngfldProdutoCadgenero: TWideStringField;
    bcdfldProdutoCadpreco: TBCDField;
    blnfldProdutoCadativo: TBooleanField;
    sqltmstmpfldProdutoCaddata_cadastro: TSQLTimeStampField;
    fdqryNumeracaoProd: TFDQuery;
    fldNumeracaoProdid_produto: TIntegerField;
    fldNumeracaoProdid_numeracao: TIntegerField;
    fldNumeracaoProdestoque: TIntegerField;
    fdqryNumeracao: TFDQuery;
    fldNumeracaoid_numeracao: TIntegerField;
    bcdfldNumeracaonumeracao: TBCDField;
    bcdfldNumeracaoProdnumeracao: TBCDField;
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure Salvar;
    procedure Inserir;
    procedure Cancelar;
    procedure Excluir;
    procedure ExibirProduto(_Codigo : Integer);
    procedure Editar;
    procedure SalvarNumeracao;
    procedure InserirNumeracao;
    procedure EditarNumeracao;
  end;

var
  DM_ProdutoCad: TDM_ProdutoCad;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TDM_ProdutoCad.Cancelar;
begin
  if (fdqryProdutoCad.state in [dsInsert, dsEdit]) then
  begin
  fdqryProdutoCad.Cancel;
  end;

end;

procedure TDM_ProdutoCad.DataModuleCreate(Sender: TObject);
begin
  fdqryProdutoCad.open;
  fdqryNumeracao.Open;
  fdqryNumeracaoProd.open;
end;

procedure TDM_ProdutoCad.Editar;
begin
  fdqryProdutoCad.edit;
end;

procedure TDM_ProdutoCad.EditarNumeracao;
begin
  fdqryNumeracaoProd.Edit;
end;

procedure TDM_ProdutoCad.Excluir;
begin
  if not fdqryProdutoCad.IsEmpty  then
  begin
    fdqryProdutoCad.Delete;
  end;

end;

procedure TDM_ProdutoCad.ExibirProduto(_Codigo: Integer);
begin
  // Carrega o produto
  with fdqryProdutoCad do
  begin
    Close;
    SQL.Clear;
    SQL.Add('SELECT * FROM produtos WHERE id = :id');
    ParamByName('id').AsInteger := _Codigo;
    Open;
  end;

  // Filtra as numerações pelo ID do produto
  with fdqryNumeracaoProd do
  begin
    Close;
    SQL.Clear;
    SQL.Add('SELECT * FROM produto_numeracao WHERE id_produto = :id_produto');
    ParamByName('id_produto').AsInteger := _Codigo;
    Open;
  end;
end;
procedure TDM_ProdutoCad.Inserir;
begin
   if not (fdqryProdutoCad.state in [dsInsert, dsEdit])   then
   begin
     fdqryProdutoCad.Insert;
   end;

end;

procedure TDM_ProdutoCad.InserirNumeracao;
begin
  if not (fdqryNumeracaoProd.State in [dsInsert, dsEdit]) then
  begin
    fdqryNumeracaoProd.Insert;

    // Define o id_produto na numeração
    if fdqryProdutoCad.State in [dsInsert, dsEdit] then
    begin
      fdqryNumeracaoProd.FieldByName('id_produto').AsInteger :=
        fdqryProdutoCad.FieldByName('id').AsInteger;
    end;
  end;
end;

procedure TDM_ProdutoCad.Salvar;
begin
  if (fdqryProdutoCad.State in [dsInsert, dsEdit]) then
  begin
    // Salva o produto
    fdqryProdutoCad.Post;

    // Obtém o ID do produto recém-inserido
    if fdqryProdutoCad.State = dsBrowse then
    begin
      // Define o id_produto na numeração
      if (fdqryNumeracaoProd.State in [dsInsert, dsEdit]) then
      begin
        fdqryNumeracaoProd.FieldByName('id_produto').AsInteger :=
          fdqryProdutoCad.FieldByName('id').AsInteger;
        fdqryNumeracaoProd.Post; // Salva a numeração
      end;
    end;
  end;
end;

procedure TDM_ProdutoCad.SalvarNumeracao;
begin
  if  (fdqryNumeracaoProd.state in [dsInsert, dsEdit]) then
   begin
     fdqryNumeracaoProd.Post;
   end;
end;

end.
